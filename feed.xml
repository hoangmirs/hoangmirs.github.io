<?xml version="1.0" encoding="utf-8"?><feed xmlns="http://www.w3.org/2005/Atom" ><generator uri="https://jekyllrb.com/" version="3.5.2">Jekyll</generator><link href="https://hoangmirs.github.io/feed.xml" rel="self" type="application/atom+xml" /><link href="https://hoangmirs.github.io/" rel="alternate" type="text/html" /><updated>2018-03-02T02:05:40+00:00</updated><id>https://hoangmirs.github.io/</id><title type="html">Mirs’s page</title><subtitle>Write an awesome description for your new site here. You can edit this line in _config.yml. It will appear in your document head meta (for Google search results) and in your feed.xml site description.
</subtitle><entry><title type="html">Zagreb city</title><link href="https://hoangmirs.github.io/zagreb-city/" rel="alternate" type="text/html" title="Zagreb city" /><published>2017-03-28T22:00:00+00:00</published><updated>2017-03-28T22:00:00+00:00</updated><id>https://hoangmirs.github.io/zagreb-city</id><content type="html" xml:base="https://hoangmirs.github.io/zagreb-city/">&lt;p&gt;Cras ac ex sit amet leo rhoncus elementum eget eget eros. Curabitur venenatis lacus eget tempus consequat. Duis feugiat vehicula bibendum. Aliquam imperdiet tortor in diam viverra scelerisque. Vestibulum erat odio, rutrum nec volutpat et, mattis id diam. Vivamus nec nunc placerat, laoreet sapien ac, dignissim magna. Sed eu lorem eget eros bibendum dignissim. Etiam eget mi non turpis pellentesque dignissim et quis turpis. Pellentesque efficitur enim in lorem consectetur scelerisque.&lt;/p&gt;

&lt;p&gt;Ut ut dolor vehicula, aliquam elit vitae, venenatis velit. Pellentesque sollicitudin vestibulum ligula, in volutpat elit vehicula vel. Mauris massa ante, vestibulum eget nisi vel, elementum tempor risus. Vivamus tincidunt ligula lorem. In viverra suscipit enim et finibus. Cras porta massa vitae ligula pretium dapibus. Ut nisl nulla, sollicitudin nec viverra quis, bibendum vel tortor. Aenean at porttitor dolor, id tristique purus. Phasellus consequat justo in elit congue sagittis. Cras at dolor molestie nisl feugiat scelerisque.&lt;/p&gt;

&lt;p&gt;Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque leo nulla, luctus vitae fermentum ac, posuere vitae lacus. Fusce interdum cursus enim ac mattis. Nunc id ornare ipsum, in commodo urna. Integer id lacus placerat, vehicula risus id, finibus sem. Morbi et elementum arcu, eget tempor est. Duis vulputate porta magna in volutpat. Morbi a feugiat velit, vel efficitur ex.&lt;/p&gt;

&lt;p&gt;Praesent non elementum turpis. Fusce venenatis est sed tortor laoreet venenatis. Suspendisse potenti. Cras tempor vulputate velit, ac suscipit leo efficitur id. Pellentesque quis urna interdum, bibendum arcu id, pharetra orci. Fusce sit amet accumsan risus. Ut malesuada dui enim, a cursus felis scelerisque ut. Sed fermentum mauris lacus. Cras vitae sagittis erat. Interdum et malesuada fames ac ante ipsum primis in faucibus. Vestibulum vehicula molestie lectus, sed consectetur velit suscipit non. Phasellus et vestibulum dolor, sit amet viverra ex. Vestibulum consequat purus nisi. Nunc ultricies ex vel justo cursus, sed placerat massa hendrerit.&lt;/p&gt;

&lt;p&gt;Etiam aliquet eros id lacus suscipit, non pellentesque neque faucibus. Quisque convallis ex vel erat venenatis, ut eleifend nisi rhoncus. Duis in felis ligula. Donec tincidunt efficitur massa aliquam molestie. Nulla pellentesque justo est. Aliquam velit massa, pharetra viverra laoreet et, mollis nec ipsum. Aliquam non ullamcorper ligula. Cras accumsan non ante sit amet tempus.&lt;/p&gt;

&lt;p&gt;Nulla egestas vestibulum ligula accumsan scelerisque. Sed nunc dolor, malesuada vitae metus cursus, venenatis efficitur mi. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Mauris et turpis id orci gravida aliquam. Curabitur ullamcorper fermentum orci, vitae ornare risus tincidunt non. Interdum et malesuada fames ac ante ipsum primis in faucibus. Ut bibendum est vel risus egestas congue. Aenean varius orci at purus maximus, euismod imperdiet purus varius.&lt;/p&gt;</content><author><name></name></author><summary type="html">Cras ac ex sit amet leo rhoncus elementum eget eget eros. Curabitur venenatis lacus eget tempus consequat. Duis feugiat vehicula bibendum. Aliquam imperdiet tortor in diam viverra scelerisque. Vestibulum erat odio, rutrum nec volutpat et, mattis id diam. Vivamus nec nunc placerat, laoreet sapien ac, dignissim magna. Sed eu lorem eget eros bibendum dignissim. Etiam eget mi non turpis pellentesque dignissim et quis turpis. Pellentesque efficitur enim in lorem consectetur scelerisque.</summary></entry><entry><title type="html">Wooden house</title><link href="https://hoangmirs.github.io/the-white-house/" rel="alternate" type="text/html" title="Wooden house" /><published>2017-03-28T22:00:00+00:00</published><updated>2017-03-28T22:00:00+00:00</updated><id>https://hoangmirs.github.io/the-white-house</id><content type="html" xml:base="https://hoangmirs.github.io/the-white-house/">&lt;p&gt;Mauris rutrum, felis vestibulum sodales posuere, erat odio volutpat ex, id interdum mi turpis ac eros. Etiam et mattis quam, non sagittis mauris. Pellentesque eleifend turpis et sem lobortis dignissim. Vivamus sagittis maximus ultricies. Ut sed nisi nisl. Sed sed purus sit amet mi accumsan dignissim ut quis augue. Nullam ut lacus nec odio aliquam tempor. Praesent nulla sapien, congue bibendum tristique luctus, mattis nec augue.&lt;/p&gt;

&lt;p&gt;Praesent accumsan, velit eget iaculis faucibus, eros quam venenatis nulla, vel accumsan risus nibh eu risus. Aenean rutrum efficitur eros, nec tincidunt felis dignissim eget. Mauris et eros nec leo varius auctor eget nec urna. Mauris ac purus neque. Nulla sed ultricies dolor, eget eleifend magna. Sed sapien nisl, vestibulum vel facilisis sit amet, finibus eu enim. Etiam et nisl ut odio commodo tempor. In rutrum a quam a lobortis. Duis euismod luctus ex nec pharetra. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Morbi eu neque nisl. Vivamus fringilla lorem non varius sagittis. Phasellus quis dapibus elit. Curabitur gravida purus id tincidunt sollicitudin. Suspendisse in placerat felis.&lt;/p&gt;

&lt;p&gt;Phasellus tincidunt pulvinar ante, pretium pellentesque urna mollis id. Donec convallis ut elit at aliquet. Suspendisse potenti. Maecenas finibus urna at arcu mollis imperdiet. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Etiam ut odio sagittis, mollis nibh sed, maximus arcu. Vestibulum varius dictum ipsum consequat posuere. Maecenas tincidunt turpis in tellus elementum auctor. Curabitur fringilla a risus eget consequat.&lt;/p&gt;

&lt;p&gt;Suspendisse massa mi, iaculis in cursus in, ullamcorper vitae orci. Praesent porttitor erat eu massa facilisis, id consequat est ultrices. Ut ac nibh sed turpis tincidunt suscipit a non arcu. Praesent imperdiet nisi non sapien efficitur mollis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent euismod sagittis consequat. Proin nulla lacus, porta eget pulvinar eu, aliquam malesuada sem. Pellentesque sed dolor et urna ullamcorper rhoncus. Mauris tempor aliquam dolor eget efficitur. Donec tristique fermentum ligula eu feugiat. Morbi dolor sapien, condimentum eu massa id, faucibus egestas sapien. Sed eu gravida dui. Nunc at felis consectetur felis fermentum pharetra.&lt;/p&gt;</content><author><name></name></author><summary type="html">Mauris rutrum, felis vestibulum sodales posuere, erat odio volutpat ex, id interdum mi turpis ac eros. Etiam et mattis quam, non sagittis mauris. Pellentesque eleifend turpis et sem lobortis dignissim. Vivamus sagittis maximus ultricies. Ut sed nisi nisl. Sed sed purus sit amet mi accumsan dignissim ut quis augue. Nullam ut lacus nec odio aliquam tempor. Praesent nulla sapien, congue bibendum tristique luctus, mattis nec augue.</summary></entry><entry><title type="html">China - tiger leaping gorge</title><link href="https://hoangmirs.github.io/china-tiger-leaping-gorge/" rel="alternate" type="text/html" title="China - tiger leaping gorge" /><published>2017-03-28T22:00:00+00:00</published><updated>2017-03-28T22:00:00+00:00</updated><id>https://hoangmirs.github.io/china-tiger-leaping-gorge</id><content type="html" xml:base="https://hoangmirs.github.io/china-tiger-leaping-gorge/">&lt;p&gt;Curabitur vulputate enim at metus malesuada, in iaculis nisl tincidunt. Mauris dapibus ut ante ornare ullamcorper. Vivamus ultrices erat lorem. Phasellus pretium nisl ac elit porttitor, id condimentum velit aliquam. Morbi convallis fermentum rutrum. Nullam vestibulum sem augue, eu fermentum est tristique ut. Cras nec euismod erat. Vivamus cursus risus mauris, quis dapibus orci tincidunt at. Mauris eleifend lobortis nibh, at volutpat risus feugiat non. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque semper elit condimentum, ullamcorper erat eu, ultrices ex. Etiam ultricies sed orci quis elementum.&lt;/p&gt;

&lt;p&gt;Pellentesque eu porta odio. Cras a gravida ligula. Nullam purus turpis, dignissim sed lectus at, bibendum tristique nulla. Etiam mollis, ligula at eleifend mollis, ex erat finibus dui, quis efficitur dolor est fringilla tellus. Donec laoreet id tellus eget rutrum. Aliquam blandit tempor odio. Vivamus vel dolor ante.&lt;/p&gt;

&lt;p&gt;Vestibulum dignissim ac mauris sed laoreet. Mauris ligula lectus, placerat id eleifend vel, rhoncus ut lacus. Nunc justo enim, maximus quis ex ut, sollicitudin condimentum ligula. Donec convallis libero sit amet aliquet tempus. Curabitur ac fringilla dui. Integer consectetur at augue ac tempus. Nullam cursus justo nec turpis accumsan, nec tincidunt sapien facilisis. Mauris fringilla augue quis dui placerat lobortis. Praesent ultricies, nisl ac maximus posuere, mi felis convallis massa, ut dictum enim mi et ex. Curabitur gravida neque at fringilla pulvinar. Quisque non turpis non nisl eleifend condimentum sed eget libero.&lt;/p&gt;

&lt;p&gt;Praesent vestibulum in odio at mattis. In purus lacus, commodo et pretium nec, interdum in mauris. Phasellus non sodales nisi. Nam suscipit molestie feugiat. Proin semper ut lectus id malesuada. Vivamus lectus lacus, luctus et nisl placerat, tristique semper elit. Morbi viverra lobortis iaculis.&lt;/p&gt;

&lt;p&gt;Nam in sagittis enim. Donec eget enim viverra, dapibus mi in, condimentum arcu. Vivamus ipsum nisl, consequat vitae rhoncus id, mattis vel velit. Duis ac libero eget felis tristique mattis. Orci varius natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Nunc condimentum interdum dui et varius. Aliquam sed congue erat, in fringilla risus. Integer viverra vulputate ligula eu dignissim. Suspendisse rhoncus id lectus a rutrum. Praesent quis erat sit amet ipsum molestie scelerisque ac at augue. Suspendisse potenti. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Mauris suscipit ante in risus sollicitudin, non imperdiet mauris ullamcorper.&lt;/p&gt;

&lt;p&gt;Sed viverra, dolor mollis dignissim consectetur, arcu mauris vehicula nibh, ac sollicitudin nisi sem vitae libero. Praesent sagittis, nulla sed ultricies placerat, nisl dui luctus dui, et vulputate tortor nisl et dolor. Nam pretium nunc nunc, sit amet luctus ante egestas id. Sed convallis viverra sem quis dapibus. Proin molestie orci sit amet volutpat sollicitudin. Morbi fringilla in lacus nec molestie. Integer in ipsum facilisis, gravida diam nec, fermentum urna.&lt;/p&gt;

&lt;p&gt;Praesent elementum neque quis pulvinar blandit. Aliquam fermentum tincidunt leo et tincidunt. Quisque finibus mattis fermentum. Nam pretium ullamcorper iaculis. Ut diam orci, volutpat quis augue sed, finibus auctor dui. Phasellus aliquet sagittis dolor, et blandit enim. Phasellus feugiat eleifend scelerisque. Mauris et diam sit amet massa tempus consequat. Vivamus blandit velit nec elit elementum pellentesque. Integer sed mi et mi tempus condimentum. Nullam ligula metus, vestibulum eget blandit eu, tempor ut neque. Fusce bibendum ac lacus ut pharetra. Curabitur laoreet eu enim sit amet imperdiet. Aenean rhoncus tortor vel arcu elementum semper. Quisque orci risus, viverra nec est pharetra, convallis placerat felis.&lt;/p&gt;</content><author><name></name></author><summary type="html">Curabitur vulputate enim at metus malesuada, in iaculis nisl tincidunt. Mauris dapibus ut ante ornare ullamcorper. Vivamus ultrices erat lorem. Phasellus pretium nisl ac elit porttitor, id condimentum velit aliquam. Morbi convallis fermentum rutrum. Nullam vestibulum sem augue, eu fermentum est tristique ut. Cras nec euismod erat. Vivamus cursus risus mauris, quis dapibus orci tincidunt at. Mauris eleifend lobortis nibh, at volutpat risus feugiat non. Interdum et malesuada fames ac ante ipsum primis in faucibus. Pellentesque semper elit condimentum, ullamcorper erat eu, ultrices ex. Etiam ultricies sed orci quis elementum.</summary></entry><entry><title type="html">Welcome to Jekyll!</title><link href="https://hoangmirs.github.io/welcome-to-jekyll/" rel="alternate" type="text/html" title="Welcome to Jekyll!" /><published>2017-03-25T19:32:40+00:00</published><updated>2017-03-25T19:32:40+00:00</updated><id>https://hoangmirs.github.io/welcome-to-jekyll</id><content type="html" xml:base="https://hoangmirs.github.io/welcome-to-jekyll/">&lt;p&gt;You’ll find this post in your &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run &lt;code class=&quot;highlighter-rouge&quot;&gt;jekyll serve&lt;/code&gt;, which launches a web server and auto-regenerates your site when a file is updated.&lt;/p&gt;

&lt;p&gt;To add new posts, simply add a file in the &lt;code class=&quot;highlighter-rouge&quot;&gt;_posts&lt;/code&gt; directory that follows the convention &lt;code class=&quot;highlighter-rouge&quot;&gt;YYYY-MM-DD-name-of-post.ext&lt;/code&gt; and includes the necessary front matter. Take a look at the source for this post to get an idea about how it works.&lt;/p&gt;

&lt;p&gt;Jekyll also offers powerful support for code snippets:&lt;/p&gt;

&lt;figure class=&quot;highlight&quot;&gt;&lt;pre&gt;&lt;code class=&quot;language-ruby&quot; data-lang=&quot;ruby&quot;&gt;&lt;span class=&quot;k&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;nf&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
  &lt;span class=&quot;nb&quot;&gt;puts&lt;/span&gt; &lt;span class=&quot;s2&quot;&gt;&quot;Hi, &lt;/span&gt;&lt;span class=&quot;si&quot;&gt;#{&lt;/span&gt;&lt;span class=&quot;nb&quot;&gt;name&lt;/span&gt;&lt;span class=&quot;si&quot;&gt;}&lt;/span&gt;&lt;span class=&quot;s2&quot;&gt;&quot;&lt;/span&gt;
&lt;span class=&quot;k&quot;&gt;end&lt;/span&gt;
&lt;span class=&quot;n&quot;&gt;print_hi&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;(&lt;/span&gt;&lt;span class=&quot;s1&quot;&gt;'Tom'&lt;/span&gt;&lt;span class=&quot;p&quot;&gt;)&lt;/span&gt;
&lt;span class=&quot;c1&quot;&gt;#=&amp;gt; prints 'Hi, Tom' to STDOUT.&lt;/span&gt;&lt;/code&gt;&lt;/pre&gt;&lt;/figure&gt;

&lt;p&gt;Check out the &lt;a href=&quot;https://jekyllrb.com/docs/home&quot;&gt;Jekyll docs&lt;/a&gt; for more info on how to get the most out of Jekyll. File all bugs/feature requests at &lt;a href=&quot;https://github.com/jekyll/jekyll&quot;&gt;Jekyll’s GitHub repo&lt;/a&gt;. If you have questions, you can ask them on &lt;a href=&quot;https://talk.jekyllrb.com/&quot;&gt;Jekyll Talk&lt;/a&gt;.&lt;/p&gt;</content><author><name></name></author><summary type="html">You’ll find this post in your _posts directory. Go ahead and edit it and re-build the site to see your changes. You can rebuild the site in many different ways, but the most common way is to run jekyll serve, which launches a web server and auto-regenerates your site when a file is updated.</summary></entry><entry><title type="html">Tạo livesearch đơn giản trên Rails sử dụng ransack, JavaScript</title><link href="https://hoangmirs.github.io/simple-live-search/" rel="alternate" type="text/html" title="Tạo livesearch đơn giản trên Rails sử dụng ransack, JavaScript" /><published>2016-10-22T23:55:00+00:00</published><updated>2016-10-22T23:55:00+00:00</updated><id>https://hoangmirs.github.io/simple-live-search</id><content type="html" xml:base="https://hoangmirs.github.io/simple-live-search/">&lt;h2 id=&quot;phần-1-giới-thiệu&quot;&gt;&lt;strong&gt;Phần 1. Giới thiệu&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Hiện tại hầu như trang web nào cũng có một khung tìm kiếm để tìm các thông tin từ nó. Và chắc hẳn nhiều bạn vừa mới tìm hiểu về web không biết nên bắt đầu từ đâu để làm ra một khung search như thế đúng không?&lt;/p&gt;

&lt;p&gt;Trong bài này mình sẽ hướng dẫn các bạn tạo một khung search đơn giản bằng Rails và Jquery.&lt;/p&gt;

&lt;p&gt;Giao diện sẽ được trình bày như sau:&lt;/p&gt;

&lt;p&gt;Giao diện khung search
&lt;img src=&quot;/uploads/61548f66-2649-4997-8abb-7d7a08c9ea5f.png&quot; alt=&quot;Screen Shot 2016-10-22 at 8.00.58 PM.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Giao diện khung search lúc hiển thị kết quả
&lt;img src=&quot;/uploads/e4a79183-2c1d-4cde-9290-ef9ec3792921.png&quot; alt=&quot;Screen Shot 2016-10-22 at 8.00.36 PM.png&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Nào chúng ta bắt đầu thôi.&lt;/p&gt;

&lt;h2 id=&quot;phần-2-chuẩn-bị&quot;&gt;&lt;strong&gt;Phần 2. Chuẩn bị&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id=&quot;21-tạo-một-ứng-dụng-rails-mới&quot;&gt;&lt;strong&gt;2.1. Tạo một ứng dụng Rails mới&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Cái này thì chắc ai cũng làm được nhỉ :D&lt;/p&gt;

&lt;h3 id=&quot;22-thêm-các-gem-để-hỗ-trợ-việc-cài-đặt&quot;&gt;&lt;strong&gt;2.2. Thêm các gem để hỗ trợ việc cài đặt&lt;/strong&gt;&lt;/h3&gt;

&lt;pre&gt;&lt;code class=&quot;language-Ruby&quot;&gt;gem &quot;bootstrap-sass&quot;
gem &quot;font-awesome-rails&quot;
// Để tạo các biểu thức search nhanh hơn
gem &quot;ransack&quot;
// Tạo dữ liệu ảo để test
gem &quot;faker&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;23-thêm-search-plugin&quot;&gt;&lt;strong&gt;2.3. Thêm Search plugin&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Các bạn hãy copy nội dung dưới đây và tạo ra file “searchbox.js” hoặc tên gì cũng được trong folder “app/assets/javascripts/”&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;// Author: Ryan Heath
// http://rpheath.com
// Mirs edited

(function($) {
  function HSearchBox(options){
    var defaults = {
      url: '/search',
      param: 'query',
      dom_id: '#livesearch_results',
      delay: 250,
      minChars: 2,
      loading_css: '#livesearch_loading',
      del_id: '#livesearch_del',
      form_id: '#livesearch_form',
      dataType: 'text',
      onInitSearch: function(){},
      onStartSearch: function(){},
      onFinishSearch: function(){}u
    }

    this.settings = $.extend({}, defaults, options || {})

    this.loading = function() {
      $(this.settings.loading_css).show()
    }

    this.idle = function() {
      $(this.settings.loading_css).hide()
    }

    this.start = function() {
      this.loading()
      this.settings.onStartSearch()
    }

    this.stop = function() {
      this.idle()
      this.settings.onFinishSearch()
    }

    this.kill = function() {
      $(this.settings.dom_id).fadeOut(50)
      $(this.settings.dom_id).html('')
      $(this.settings.del_id).fadeOut(100)
    }

    this.reset = function() {
      $(this.settings.dom_id).html('')
      $(this.settings.dom_id).fadeOut(50)
      $(this.settings.form_id).val('')
      $(this.settings.del_id).fadeOut(100)
    }

    this.resetTimer = function(timer) {
      if (timer) clearTimeout(timer)
    }

    this.process = function(terms) {
      var currentSearchBox = this
      if (/\S/.test(terms)) {
        $.ajax({
          type: 'GET',
          dataType : currentSearchBox.settings.dataType,
          url: currentSearchBox.settings.url,
          data: {
            search: terms.trim()
          },
          complete: function(data) {
            $(currentSearchBox.settings.del_id).fadeIn(50)
            $(currentSearchBox.settings.dom_id).html(data.responseText)
            if (!$(currentSearchBox.settings.dom_id).is(':empty')) {
              $(currentSearchBox.settings.dom_id).fadeIn(100)
            }
            currentSearchBox.stop()
          }
        })
        return false
      } else {
        currentSearchBox.kill()
      }
    }
  }

  $.fn.hsearchbox = function(configs) {
    var hsearchbox = new HSearchBox(configs)
    hsearchbox.settings.onInitSearch()
    hsearchbox.idle()

    return this.each(function() {
      var $input = $(this)
      $input
        .keyup(function() {
          if ($input.val() != this.previousValue) {
            if (/\S/.test($input.val().trim()) &amp;amp;&amp;amp; $input.val().trim().length &amp;gt; hsearchbox.settings.minChars) {
              hsearchbox.resetTimer(this.timer)
              this.timer = setTimeout(function() {
                hsearchbox.start()
                hsearchbox.process($input.val())
              }, hsearchbox.settings.delay)
            } else {
              hsearchbox.kill()
            }
            this.previousValue = $input.val()
          }
        })
    })
  }
})(jQuery)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Các bạn có thể vào link sau để xem hướng dẫn cách dùng plugin này.
&lt;code class=&quot;highlighter-rouge&quot;&gt;https://github.com/hoangmirs/searchbox/&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Đây là một plugin của Ryan Heath và mình lấy về tùy biến thêm các phần cho phù hợp.&lt;/p&gt;

&lt;h2 id=&quot;phần-3-chiến-thôi&quot;&gt;&lt;strong&gt;Phần 3. Chiến thôi&lt;/strong&gt;&lt;/h2&gt;

&lt;h3 id=&quot;31-tạo-ra-các-model-để-test&quot;&gt;&lt;strong&gt;3.1. Tạo ra các model để test&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Mình tạo 2 models để test, đó là User và Badge tương ứng như dưới.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;User&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Ruby&quot;&gt;class CreateUsers &amp;lt; ActiveRecord::Migration[5.0]
  def change
    create_table :users do |t|
      t.string :username
      t.string :fullname
      t.string :email
      t.string :avatar

      t.timestamps
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;Badge&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Ruby&quot;&gt;class CreateBadges &amp;lt; ActiveRecord::Migration[5.0]
  def change
    create_table :badges do |t|
      t.string :name
      t.string :image
      t.references :user, foreign_key: true

      t.timestamps
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Sau đó chạy Seed như sau để có dữ liệu test:&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Seed&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Ruby&quot;&gt;puts &quot;Creating users....&quot;
10.times do |n|
  fullname = Faker::Name.name
  username = Faker::Internet.user_name
  email = Faker::Internet.email
  avatar = &quot;/assets/user-#{n%6 + 1}&quot;
  User.create! fullname: fullname, username: username, email: email, avatar: avatar
end
puts &quot;Created users!&quot;
puts &quot;Creating badges....&quot;
10.times do |n|
  name = Faker::Book.title
  image = &quot;/assets/user-#{n%6 + 1}&quot;
  user_id = rand(User.count) + 1
  Badge.create! name: name, image: image, user_id: user_id
end
puts &quot;Created badges!&quot;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Mình có để sẵn 6 cái hình ở trong thư mục &lt;code class=&quot;highlighter-rouge&quot;&gt;app/assets/images&lt;/code&gt; nên có phần này:
&lt;code class=&quot;highlighter-rouge&quot;&gt;avatar = &quot;/assets/user-#{n%6 + 1}&quot;&lt;/code&gt;.
Các bạn muốn thì cứ lên mạng kiếm 6 cái hình đặt tên dạng user-num cũng ok.&lt;/p&gt;

&lt;h3 id=&quot;32-tạo-controllers&quot;&gt;&lt;strong&gt;3.2. Tạo controllers&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Mình sẽ làm 3 khung tìm kiếm, khung đầu tiên sẽ tìm cả Users lẫn Badges, khung thứ nhìn tìm Users và khung thứ ba tìm Badges.
File &lt;code class=&quot;highlighter-rouge&quot;&gt;routes.rb&lt;/code&gt; của mình sẽ có dạng như sau:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Ruby&quot;&gt;Rails.application.routes.draw do
  get &quot;search(/:search)&quot;, to: &quot;searches#index&quot;, as: :search
  resources :badges
  resources :users
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tạo &lt;code class=&quot;highlighter-rouge&quot;&gt;SearchesController&lt;/code&gt; để tìm cả Users lẫn Badges
&lt;strong&gt;SeachesController&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Ruby&quot;&gt;class SearchesController &amp;lt; ApplicationController
  def index
    q = params[:search]
    users = User.search(fullname_or_username_or_email_cont: q).result
    badges = Badge.search(name_or_user_fullname_cont: q).result
      .includes(:user)
    @items = users + badges
    respond_to do |format|
      format.js
      format.html
    end
  end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ở đây mình dùng các pattern search của gem Ransack nên có khó hiểu thì tìm hiểu gem này nhé. Mình cũng trả về chung 1 mảng dữ liệu là @items, sau đó sẽ xử lí dưới view sau.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;UsersController&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Ruby&quot;&gt;class UsersController &amp;lt; ApplicationController
  before_action :set_user, only: [:show, :edit, :update, :destroy]

  # GET /users
  # GET /users.json
  def index
    q = params[:search]
    if q
      @users = User.search(fullname_or_username_or_email_cont: q).result
    else
      @users = User.all
    end
    respond_to do |format|
      format.js
      format.html
    end
  end

  # GET /users/1
  # GET /users/1.json
  def show
  end

  # GET /users/new
  def new
    @user = User.new
  end

  # GET /users/1/edit
  def edit
  end

  # POST /users
  # POST /users.json
  def create
    @user = User.new(user_params)

    respond_to do |format|
      if @user.save
        format.html { redirect_to @user, notice: 'User was successfully created.' }
        format.json { render :show, status: :created, location: @user }
      else
        format.html { render :new }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /users/1
  # PATCH/PUT /users/1.json
  def update
    respond_to do |format|
      if @user.update(user_params)
        format.html { redirect_to @user, notice: 'User was successfully updated.' }
        format.json { render :show, status: :ok, location: @user }
      else
        format.html { render :edit }
        format.json { render json: @user.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /users/1
  # DELETE /users/1.json
  def destroy
    @user.destroy
    respond_to do |format|
      format.html { redirect_to users_url, notice: 'User was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_user
      @user = User.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def user_params
      params.require(:user).permit(:username, :fullname, :email, :avatar)
    end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Cái này mình generate scaffold nên nó nhìu như vậy. Tương tự badges cũng thế. Hai cái này mình chỉ sửa lại action index thôi :D&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;BadgesController&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Ruby&quot;&gt;class BadgesController &amp;lt; ApplicationController
  before_action :set_badge, only: [:show, :edit, :update, :destroy]

  # GET /badges
  # GET /badges.json
  def index
    q = params[:search]
    if q
      @badges = Badge.search(name_or_user_fullname_cont: q).result
    else
      @badges = Badge.all
    end
    respond_to do |format|
      format.js
      format.html
    end
  end

  # GET /badges/1
  # GET /badges/1.json
  def show
  end

  # GET /badges/new
  def new
    @badge = Badge.new
  end

  # GET /badges/1/edit
  def edit
  end

  # POST /badges
  # POST /badges.json
  def create
    @badge = Badge.new(badge_params)

    respond_to do |format|
      if @badge.save
        format.html { redirect_to @badge, notice: 'Badge was successfully created.' }
        format.json { render :show, status: :created, location: @badge }
      else
        format.html { render :new }
        format.json { render json: @badge.errors, status: :unprocessable_entity }
      end
    end
  end

  # PATCH/PUT /badges/1
  # PATCH/PUT /badges/1.json
  def update
    respond_to do |format|
      if @badge.update(badge_params)
        format.html { redirect_to @badge, notice: 'Badge was successfully updated.' }
        format.json { render :show, status: :ok, location: @badge }
      else
        format.html { render :edit }
        format.json { render json: @badge.errors, status: :unprocessable_entity }
      end
    end
  end

  # DELETE /badges/1
  # DELETE /badges/1.json
  def destroy
    @badge.destroy
    respond_to do |format|
      format.html { redirect_to badges_url, notice: 'Badge was successfully destroyed.' }
      format.json { head :no_content }
    end
  end

  private
    # Use callbacks to share common setup or constraints between actions.
    def set_badge
      @badge = Badge.find(params[:id])
    end

    # Never trust parameters from the scary internet, only allow the white list through.
    def badge_params
      params.require(:badge).permit(:name, :image, :user_id)
    end
end
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;33-tạo-views&quot;&gt;&lt;strong&gt;3.3. Tạo views&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Ở file _header.html.erb mình làm 3 thanh navbar:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;nav class=&quot;navbar navbar-default&quot;&amp;gt;
  &amp;lt;div class=&quot;row&quot;&amp;gt;
    &amp;lt;!-- Brand and toggle get grouped for better mobile display --&amp;gt;
    &amp;lt;div class=&quot;col-md-2&quot;&amp;gt;
      &amp;lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&amp;gt;All&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;!-- Collect the nav links, forms, and other content for toggling --&amp;gt;
    &amp;lt;div class=&quot;col-md-8&quot;&amp;gt;
      &amp;lt;%= form_tag search_path, method: :get,
        class: &quot;navbar-form search-form&quot;, id: &quot;livesearch_form&quot; do %&amp;gt;
        &amp;lt;div class=&quot;form-group dropdown&quot;&amp;gt;
          &amp;lt;%= text_field_tag :search, params[:search],
            class: &quot;form-control dropdown-toggle&quot;,
            placeholder: &quot;Search...&quot;,
            &quot;data-toggle&quot;: &quot;dropdown&quot;, &quot;aria-hidden&quot;: :true,
            autocomplete: :off, required: true, id: &quot;livesearch_input&quot; %&amp;gt;
          &amp;lt;ul class=&quot;dropdown-menu&quot;&amp;gt;
            &amp;lt;div id=&quot;livesearch_dom&quot;&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;/ul&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;%= button_tag type: :submit, class: &quot;btn btn-default&quot; do %&amp;gt;
          &amp;lt;i class=&quot;fa fa-search&quot;&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;% end %&amp;gt;
      &amp;lt;% end %&amp;gt;
    &amp;lt;/div&amp;gt;&amp;lt;!-- /.navbar-collapse --&amp;gt;
  &amp;lt;/div&amp;gt;&amp;lt;!-- /.container-fluid --&amp;gt;
&amp;lt;/nav&amp;gt;

&amp;lt;nav class=&quot;navbar navbar-default&quot;&amp;gt;
  &amp;lt;div class=&quot;row&quot;&amp;gt;
    &amp;lt;!-- Brand and toggle get grouped for better mobile display --&amp;gt;
    &amp;lt;div class=&quot;col-md-2&quot;&amp;gt;
      &amp;lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&amp;gt;Users&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;!-- Collect the nav links, forms, and other content for toggling --&amp;gt;
    &amp;lt;div class=&quot;col-md-8&quot;&amp;gt;
      &amp;lt;%= form_tag users_path, method: :get,
        class: &quot;navbar-form search-form&quot;, id: &quot;livesearch_user_form&quot; do %&amp;gt;
        &amp;lt;div class=&quot;form-group dropdown&quot;&amp;gt;
          &amp;lt;%= text_field_tag :search, params[:search],
            class: &quot;form-control dropdown-toggle&quot;,
            placeholder: &quot;Search users...&quot;,
            &quot;data-toggle&quot;: &quot;dropdown&quot;, &quot;aria-hidden&quot;: :true,
            autocomplete: :off, required: true, id: &quot;livesearch_user_input&quot; %&amp;gt;
          &amp;lt;ul class=&quot;dropdown-menu&quot;&amp;gt;
            &amp;lt;div id=&quot;livesearch_user_dom&quot;&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;div id=&quot;livesearch_user_loading&quot;&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;/ul&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;%= button_tag type: :submit, class: &quot;btn btn-default&quot; do %&amp;gt;
          &amp;lt;i class=&quot;fa fa-search&quot;&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;% end %&amp;gt;
      &amp;lt;% end %&amp;gt;
    &amp;lt;/div&amp;gt;&amp;lt;!-- /.navbar-collapse --&amp;gt;
  &amp;lt;/div&amp;gt;&amp;lt;!-- /.container-fluid --&amp;gt;
&amp;lt;/nav&amp;gt;

&amp;lt;nav class=&quot;navbar navbar-default&quot;&amp;gt;
  &amp;lt;div class=&quot;row&quot;&amp;gt;
    &amp;lt;!-- Brand and toggle get grouped for better mobile display --&amp;gt;
    &amp;lt;div class=&quot;col-md-2&quot;&amp;gt;
      &amp;lt;a class=&quot;navbar-brand&quot; href=&quot;#&quot;&amp;gt;Badges&amp;lt;/a&amp;gt;
    &amp;lt;/div&amp;gt;

    &amp;lt;!-- Collect the nav links, forms, and other content for toggling --&amp;gt;
    &amp;lt;div class=&quot;col-md-8&quot;&amp;gt;
      &amp;lt;%= form_tag badges_path, method: :get,
        class: &quot;navbar-form search-form&quot;, id: &quot;livesearch_badge_form&quot; do %&amp;gt;
        &amp;lt;div class=&quot;form-group dropdown&quot;&amp;gt;
          &amp;lt;%= text_field_tag :search, params[:search],
            class: &quot;form-control dropdown-toggle&quot;,
            placeholder: &quot;Search badges...&quot;,
            &quot;data-toggle&quot;: &quot;dropdown&quot;, &quot;aria-hidden&quot;: :true,
            autocomplete: :off, required: true, id: &quot;livesearch_badge_input&quot; %&amp;gt;
          &amp;lt;ul class=&quot;dropdown-menu&quot;&amp;gt;
            &amp;lt;div id=&quot;livesearch_badge_dom&quot;&amp;gt;&amp;lt;/div&amp;gt;
            &amp;lt;div id=&quot;livesearch_badge_loading&quot;&amp;gt;&amp;lt;/div&amp;gt;
          &amp;lt;/ul&amp;gt;
        &amp;lt;/div&amp;gt;
        &amp;lt;%= button_tag type: :submit, class: &quot;btn btn-default&quot; do %&amp;gt;
          &amp;lt;i class=&quot;fa fa-search&quot;&amp;gt;&amp;lt;/i&amp;gt;
        &amp;lt;% end %&amp;gt;
      &amp;lt;% end %&amp;gt;
    &amp;lt;/div&amp;gt;&amp;lt;!-- /.navbar-collapse --&amp;gt;
  &amp;lt;/div&amp;gt;&amp;lt;!-- /.container-fluid --&amp;gt;
&amp;lt;/nav&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Ban đầu chỉ định thêm một cái thôi, nhưng nhác quá nên quất cả 3 cái trong này luôn.&lt;/p&gt;

&lt;p&gt;Bây giờ ình sẽ làm view kết quả để hiển thị:&lt;/p&gt;

&lt;p&gt;Mình tạo folder &lt;code class=&quot;highlighter-rouge&quot;&gt;app/views/shared&lt;/code&gt; và tạo file &lt;code class=&quot;highlighter-rouge&quot;&gt;_search.html.erb&lt;/code&gt;. Mục đích là định nghĩa cái view kết quả khi tìm kiếm ở khung tìm kiếm cả Users và Badges.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;% if items.blank? %&amp;gt;
  &amp;lt;li&amp;gt;
    &amp;lt;%= link_to search_path(params[:search]),
      class: &quot;btn btn-default btn-block&quot; do %&amp;gt;
      &amp;lt;%= &quot;No results for #{params[:search]}&quot; %&amp;gt;
    &amp;lt;% end %&amp;gt;
  &amp;lt;/li&amp;gt;
&amp;lt;% else %&amp;gt;
  &amp;lt;div class=&quot;scrollable-menu&quot;&amp;gt;
    &amp;lt;% items.each do |item| %&amp;gt;
      &amp;lt;% if item.is_a? User %&amp;gt;
        &amp;lt;%= render &quot;users/search_item&quot;, user: item %&amp;gt;
      &amp;lt;% elsif item.is_a? Badge %&amp;gt;
        &amp;lt;%= render &quot;badges/search_item&quot;, badge: item %&amp;gt;
      &amp;lt;% end %&amp;gt;
    &amp;lt;% end %&amp;gt;
  &amp;lt;/div&amp;gt;
  &amp;lt;li class=&quot;divider&quot;&amp;gt;&amp;lt;/li&amp;gt;
  &amp;lt;li&amp;gt;
    &amp;lt;%= link_to search_path(params[:search]),
      class: &quot;btn btn-default btn-block&quot; do %&amp;gt;
      &amp;lt;%= &quot;See more #{items.size} for #{params[:search]}&quot; %&amp;gt;
    &amp;lt;% end %&amp;gt;
  &amp;lt;/li&amp;gt;
&amp;lt;% end %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Như khi nãy mình có nói là mình truyền về @items, thì trong này mình sẽ check xem từng từng item đó là gì và hiển thị partial tương ứng.&lt;/p&gt;

&lt;p&gt;Tiếp theo sẽ đến tạo partial.&lt;/p&gt;

&lt;p&gt;Mình tạo thêm partial &lt;code class=&quot;highlighter-rouge&quot;&gt;search_item&lt;/code&gt; cho users bằng cách tạo file &lt;code class=&quot;highlighter-rouge&quot;&gt;_search_item.html.erb&lt;/code&gt; trong folder &lt;code class=&quot;highlighter-rouge&quot;&gt;app/views/users&lt;/code&gt;
&lt;strong&gt;_search_item.html.erb&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;li class=&quot;search-item&quot;&amp;gt;
  &amp;lt;%= link_to user do %&amp;gt;
    &amp;lt;div class=&quot;col-md-3&quot;&amp;gt;
      &amp;lt;%= image_tag user.avatar, class: &quot;img-responsive&quot; %&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;col-md-9&quot;&amp;gt;
      &amp;lt;div class=&quot;row&quot;&amp;gt;
        &amp;lt;strong&amp;gt;&amp;lt;%= user.fullname %&amp;gt;&amp;lt;/strong&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;div class=&quot;row&quot;&amp;gt;
        &amp;lt;div class=&quot;col-md-8&quot;&amp;gt;
          &amp;lt;%= user.email %&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;div class=&quot;row&quot;&amp;gt;
        &amp;lt;i&amp;gt;&amp;lt;%= User.name %&amp;gt;&amp;lt;/i&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;clearfix&quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;% end %&amp;gt;
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Tương tự cho Badges, tạo file &lt;code class=&quot;highlighter-rouge&quot;&gt;_search_item.html.erb&lt;/code&gt; trong folder &lt;code class=&quot;highlighter-rouge&quot;&gt;app/views/badges&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;_search_item.html.erb&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-HTML&quot;&gt;&amp;lt;li class=&quot;search-item&quot;&amp;gt;
  &amp;lt;%= link_to badge do %&amp;gt;
    &amp;lt;div class=&quot;col-xs-12 col-sm-3 col-md-3&quot;&amp;gt;
      &amp;lt;%= image_tag badge.image, class: &quot;img-responsive&quot; %&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;col-xs-12 col-sm-9 col-md-9&quot;&amp;gt;
      &amp;lt;div class=&quot;row&quot;&amp;gt;
        &amp;lt;strong&amp;gt;&amp;lt;%= badge.name %&amp;gt;&amp;lt;/strong&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;div class=&quot;row&quot;&amp;gt;
        &amp;lt;div class=&quot;col-md-8&quot;&amp;gt;
          &amp;lt;%= badge.user.fullname %&amp;gt;
        &amp;lt;/div&amp;gt;
      &amp;lt;/div&amp;gt;
      &amp;lt;div class=&quot;row&quot;&amp;gt;
        &amp;lt;i&amp;gt;&amp;lt;%= Badge.name %&amp;gt;&amp;lt;/i&amp;gt;
      &amp;lt;/div&amp;gt;
    &amp;lt;/div&amp;gt;
    &amp;lt;div class=&quot;clearfix&quot;&amp;gt;&amp;lt;/div&amp;gt;
  &amp;lt;% end %&amp;gt;
&amp;lt;/li&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vậy là xong cho view. Tiếp theo chúng ta sẽ thêm vài đoạn JS để nó chạy nào.&lt;/p&gt;

&lt;h3 id=&quot;34-tạo-các-đoạn-javascript&quot;&gt;&lt;strong&gt;3.4. Tạo các đoạn JavaScript&lt;/strong&gt;&lt;/h3&gt;

&lt;h4 id=&quot;341-khởi-tạo-searchbox&quot;&gt;&lt;strong&gt;3.4.1. Khởi tạo searchbox&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Chúng ta sẽ khởi tạo các searchbox bằng cách tạo 1 file js ở &lt;code class=&quot;highlighter-rouge&quot;&gt;app/assets/javascripts&lt;/code&gt; và đặt tên tùy ý. Ở đây mình đặt là &lt;code class=&quot;highlighter-rouge&quot;&gt;header.js&lt;/code&gt; vì mấy khung search của mình để ở header :))&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;header.js&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-JavaScript&quot;&gt;$(document).ready(function() {
  $('#livesearch_input').hsearchbox({
    url: $('#livesearch_form').attr('action'),
    param: 'search',
    dom_id: '#livesearch_dom',
    loading_css: '#livesearch_loading',
    onInitSearch: function() {
      console.log(&quot;search init:&quot; + this.url);
    },
    onStartSearch: function() {
      console.log(&quot;search start&quot;);
    },
    onFinishSearch: function() {
      console.log(&quot;search finish&quot;);
    }
  });
  $('#livesearch_user_input').hsearchbox({
    url: $('#livesearch_user_form').attr('action'),
    param: 'search',
    dom_id: '#livesearch_user_dom',
    loading_css: '#livesearch_user_loading',
    onInitSearch: function() {
      console.log(&quot;user init:&quot; + this.url);
    },
    onStartSearch: function() {
      console.log(&quot;user start&quot;);
    },
    onFinishSearch: function() {
      console.log(&quot;user finish&quot;);
    }
  });
  $('#livesearch_badge_input').hsearchbox({
    url: $('#livesearch_badge_form').attr('action'),
    param: 'search',
    dom_id: '#livesearch_badge_dom',
    loading_css: '#livesearch_badge_loading',
    onInitSearch: function() {
      console.log(&quot;badge init:&quot; + this.url);
    },
    onStartSearch: function() {
      console.log(&quot;badge start&quot;);
    },
    onFinishSearch: function() {
      console.log(&quot;badge finish&quot;);
    }
  });
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Phần config này các bạn có thể tìm hiểu thêm ở link &lt;code class=&quot;highlighter-rouge&quot;&gt;github&lt;/code&gt; của plugin mình gửi ở trên.&lt;/p&gt;

&lt;h4 id=&quot;342-các-file-js-để-render-kết-quả&quot;&gt;&lt;strong&gt;3.4.2. Các file JS để render kết quả&lt;/strong&gt;&lt;/h4&gt;

&lt;p&gt;Mình có 3 files JS tất cả, tương ứng với 3 action &lt;code class=&quot;highlighter-rouge&quot;&gt;index&lt;/code&gt; của 3 controllers phía trên. Những files này để trả về kết quả cho plugin và hiển thị ra.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;app/views/searches/index.js.erb&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Ruby&quot;&gt;&amp;lt;%= render &quot;shared/search&quot;, items: @items %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;app/views/users/index.js.erb&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Ruby&quot;&gt;&amp;lt;%= render &quot;shared/search&quot;, items: @users %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;strong&gt;app/views/badges/index.js.erb&lt;/strong&gt;&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-Ruby&quot;&gt;&amp;lt;%= render &quot;shared/search&quot;, items: @badges %&amp;gt;
&lt;/code&gt;&lt;/pre&gt;

&lt;h3 id=&quot;35-bonus-thêm-css&quot;&gt;&lt;strong&gt;3.5. Bonus thêm css&lt;/strong&gt;&lt;/h3&gt;

&lt;p&gt;Mình có tạo file &lt;code class=&quot;highlighter-rouge&quot;&gt;app/assets/stylesheets/livesearch.scss&lt;/code&gt; để custom cái khung search cho dễ nhìn tí. Các bạn có thể copy về để thử.&lt;/p&gt;

&lt;p&gt;**livesearch.scss&lt;/p&gt;

&lt;pre&gt;&lt;code class=&quot;language-SCSS&quot;&gt;.scrollable-menu {
  height: auto;
  max-height: 500px;
  overflow-x: hidden;
}

li.search-item {
  height: 75px;
  margin: 10px;
  &amp;amp;:hover {
    background-color: #ecf0f1;
    cursor:pointer;
  }
  a:link {
   color:inherit;
  }
}

#livesearch {
  a {
    color: #66757f;
  }
}

.search-form {
  display: table;
  width: 500px;
  background-color: #fff;
  padding: 0;
  .form-group {
    display: table-cell;
    width: 100%;
    .form-control {
      width: 100%;
    }
  }
    button {
      display: table-cell;
      width: 70px;
    }
}

.dropdown-menu {
  padding: 0;
  border: none;
  width: 100%;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Vậy là xong. Chúng ta đã có bộ 3 khung tìm kiếm ngon lành rồi (chuckle)&lt;/p&gt;

&lt;h2 id=&quot;phần-3-kết-luận&quot;&gt;&lt;strong&gt;Phần 3. Kết luận&lt;/strong&gt;&lt;/h2&gt;

&lt;p&gt;Qua bài chia sẻ bên trên, mình mong các bạn sẽ có thể tự tùy biến được cho mình một khung tìm kiếm đơn giản. Nếu thấy bài viết bổ ích, các bạn hãy ủng hộ cho mình nhé.
 Dưới đây mình note lại link &lt;code class=&quot;highlighter-rouge&quot;&gt;github&lt;/code&gt; của cái plugin và example mình làm mẫu. Các bạn có thể lấy về vọc thử:
 &lt;code class=&quot;highlighter-rouge&quot;&gt;https://github.com/hoangmirs/searchbox/&lt;/code&gt;
 &lt;code class=&quot;highlighter-rouge&quot;&gt;https://github.com/hoangmirs/hsearchbox-example&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Nếu thấy hay thì nhớ &lt;strong&gt;Star&lt;/strong&gt; cho mình. Cảm ơn các bạn.&lt;/p&gt;</content><author><name></name></author><summary type="html">Phần 1. Giới thiệu</summary></entry></feed>